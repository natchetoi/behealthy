<?php
/**
 * @file
 * Installation actions for FlexSlider.
 */

/**
 * Implements hook_uninstall().
 *
 * Deletes all content and configuration installed by this module.
 */
function flexslider_uninstall() {
  // Delete all of the configuration installed by this module.
  $dir = drupal_get_path('module', 'flexslider') . '/config/install';
  $files = file_scan_directory($dir, '/.*/');
  foreach ($files as $file) {
    \Drupal::configFactory()->getEditable($file->name)->delete();
  }
  \Drupal::logger('flexslider')->info(t('Deleted flexslider configuration'), array());
}

/**
 * Implements hook_requirements().
 */
function flexslider_requirements($phase) {
  $requirements = array();

  // Check to see if the flexslider library is available.
  if ($phase == 'runtime') {
    $requirements['flexslider'] = array(
      'title' => t('FlexSlider'),
      // @todo have the version automatically detected
      'description' => t('Version 2.0 installed'),
      'severity' => REQUIREMENT_OK,
    );
    _flexslider_requirements_library_installed($requirements);
  }
  return $requirements;
}

/**
 * Check if the library is available.
 *
 * @param array $requirements
 *   Requirements definition.
 */
function _flexslider_requirements_library_installed(&$requirements) {

  $path = libraries_get_path('flexslider');
  $installed = file_exists($path . '/jquery.flexslider-min.js') && file_exists($path . '/jquery.flexslider.js');

  // Check the results of the test.
  if (!$installed) {
    $requirements['flexslider']['description'] = t('FlexSlider library not found. Please consult the README.txt for installation instructions.');
    $requirements['flexslider']['severity'] = REQUIREMENT_ERROR;
    $requirements['flexslider']['value'] = t('FlexSlider library not found.');
    return;
  }

  $js = file_exists($path . '/jquery.flexslider-min.js') ? fopen($path . '/jquery.flexslider-min.js', 'r') : fopen($path . '/jquery.flexslider.js', 'r');
  $header = fread($js, 64);
  $matches = array();
  if (preg_match("/ v([0-9]+)\.([0-9]+)/", $header, $matches)) {
    if (!($matches[1] == 2 and $matches[2] >= 0)) {
      $requirements['flexslider']['description'] = t('FlexSlider must be version 2.0 or higher, but lower than version 3.0.  Please consult the README.txt for installation instructions.');
      $requirements['flexslider']['severity'] = REQUIREMENT_WARNING;
      $requirements['flexslider']['value'] = t('Incorrect version detected.');
      return;
    }
    else {
      $version = $matches[1] . "." . $matches[2];
      \Drupal::configFactory()->getEditable('flexslider.settings')->set('flexslider_version', $version)->save();
      $requirements['flexslider']['description'] = t('Version %version installed', array('%version' => $version));
      $requirements['flexslider']['value'] = t('FlexSlider library installed.');
      return;
    }
  }
  else {
    $requirements['flexslider']['description'] = t('FlexSlider version could not be determined.  Please consult the README.txt for installation instructions.');
    $requirements['flexslider']['severity'] = REQUIREMENT_WARNING;
    $requirements['flexslider']['value'] = t('Unable to detect version.');
  }
}
